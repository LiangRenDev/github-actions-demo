# This is a basic workflow to help you get started with Actions
name: action-demo
# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      id:
        description: "running id"
        required: false
      ref:
        description: "reference"
        required: false
  push:
    branches: ["**"]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_cd:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - uses: vimtor/action-zip@v1.1
        with:
          recursive: false
          files: cd/test-sub
          dest: cd-test.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: artifact-cd
          path: cd-test.zip

  build_dist_sub1:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: artifact-dist-sub1
          path: ./dist/sub1
  build_dist_sub2:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: artifact-dist-sub2
          path: ./dist/sub2

  build_on_linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Make dir
        run: |
          mkdir /testdir/test1
  publish_comment_in_pr:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: test
        id: build
        run: sleep $(( RANDOM % 30)) && exit 1
        continue-on-error: true
      
      - uses: mshick/add-pr-comment@v2
        if: steps.build.outcome != 'failure'
        with:
           message: |
            **Hello**
            üåè
            **${{steps.build.outcome}}**
            

       
  # This workflow contains a single job called "build"
  hello_world_job:
    runs-on: windows-latest
    name: A job to say hello
    needs: [build_cd, build_dist_sub1, build_dist_sub2]
    steps:
      - uses: actions/checkout@v3

      - name: download cd
        uses: actions/download-artifact@v2
        with:
          name: artifact-cd
          path: ./

      - name: Extract cd-test
        run: |
          ls
          Expand-Archive -Path ".\cd-test.zip" -DestinationPath ".\temp"

      - name: download sub1
        uses: actions/download-artifact@v2
        with:
          name: artifact-dist-sub1
          path: dist-test/sub1
      - name: download sub2
        uses: actions/download-artifact@v2
        with:
          name: artifact-dist-sub2
          path: dist-test/sub2
      - name: create destination folder and copy
        run: |
          mkdir space
          Copy-Item -Path .\cd-test -Destination ./space -Recurse -Force
          Copy-Item -Path .\dist-test -Destination ./space -Recurse -Force

      - uses: vimtor/action-zip@v1.1
        with:
          recursive: false
          files: space/
          dest: result.zip

      - uses: actions/upload-artifact@v1
        with:
          name: my-artifact
          path: ${{ github.workspace }}/result.zip
